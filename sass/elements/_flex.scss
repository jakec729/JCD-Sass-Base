/* ----------------------------------------------------
 * FLEXBOX Styling
 * ------------------------------------------------- */

@mixin flex-group($direction: row){
	display: flex;
	flex-direction: $direction;
}

@function flex-width( $cols, $total: $default-total-cols ){
	$col-width: (100% * $cols / $total);

	@return $col-width;
}

@mixin flex-column( $cols, $total: $default-total-cols ){
	width: flex-width($cols, $total);
}

@mixin responsive-flex-column( $breakpoint, $cols, $total: $default-total-cols ){
	width: 100%;

	@include bp-min($breakpoint){
		@include flex-column( $cols, $total );
	}
}

@mixin responsive-flex-group( $breakpoint: null ){
	@include bp-min($breakpoint){
		@include flex-group();
	}
}

@mixin render-flex-cols( $pre: 'flex', $bp-array: $grid-bp-array ){
	@for $i from 1 through $default-total-cols {
		.#{$pre}-#{$i}{
			@include flex-column( $cols: $i );
		}

		@each $id in map-keys($bp-array){
			.#{$pre}-#{$id}-#{$i} {
				@include responsive-flex-column( map-get($bp-array, $id), $i);
			}
		}
	}

	@each $id in map-keys($bp-array){
		.#{$pre}-group-#{$id} {
			@include responsive-flex-group( map-get($grid-bp-array, $id) );
		}
	}
}


/* STYLES */
/* -------------------------------------- */

.flex-group {
	@include flex-group;
}

@include render-flex-cols();

